i <- data$steps[data$interval=0]
i <- data$steps[data$interval==0]
mean(i)
sum(i)
?mean
interval_data <- aggregate(list(total_steps=data$steps), by=list(interval=data$interval), FUN=function(a) {mean(a, na.rm=TRUE)})
head(interval_data)
tail(interval_data)
interval_data[150]
interval_data[150,2]
hist(date_data)
hist(date_data$total_steps)
hist(date_data$total_steps, main="Number of steps taken per day", xlab="")
median
mean(date_data$total_steps)
mean(date_data$total_steps, na.rm)
mean(date_data$total_steps, na.rm=TRUE)
?lines
plot(interval_data$interval, interval_data$total_steps, type='l')
plot(interval_data$interval, interval_data$total_steps, type='l', xlab="Numbers of steps per interval")
?max
pmax(interval_data$total_steps)
max(interval_data$total_steps)
interval_data$interval[interval_data$total_steps == max(interval_data$total_steps)]
?>strptime
?strptime
strptime(0)
strptime()
time()
now()
strptime(x=0, format='%s')
strptime(x=0, format='%S')
strptime(x=0, format='%s')
strptime(x=0, format='%s') + 3
strptime(x=0, format='%s') + 835 * 60
strptime(x=0, format='%s') + 840 * 60
format(strptime(x=0, format='%s') + 840 * 60, "%H:%M"
)
format(strptime(x=0, format='%s', tz=0) + 840 * 60, "%H:%M"
)
format(strptime(x=0, format='%s', usetz=FALSE) + 840 * 60, "%H:%M")
format(strftime(x=0, format='%s', usetz=FALSE) + 840 * 60, "%H:%M")
format(strftime(x=0, format='%s') + 840 * 60, "%H:%M")
format(strptime(x=0, format='%s', usetz=FALSE) + 840 * 60, "%H:%M")
format(strptime(x=0, format='%s') + 840 * 60, "%H:%M")
format(strptime(x=0, format='%s', tz='GMT') + 840 * 60, "%H:%M")
strptime(x=0, format='%s')
strptime(x=0, format='%s', tz='GMT')
strptime(x=0, format='%s', tz='CET')
?format
format(strptime(x=0, format='%s', tz='GMT') + 840 * 60, "%H:%M")
format(strptime(x=0, format='%s', tz='GMT') + 840 * 60, "%H:%M", tz='UTC')
format(strptime(x=0, format='%s', tz='CET') + 840 * 60, "%H:%M", tz='UTC')
format(strptime(x=0, format='%s') + 840 * 60, "%H:%M", tz='UTC')
835
835 / 60 * 5
835 / 12
835 / 60
data
head(data)
is.na(data$steps)
len(is.na(data$steps))
lenght(is.na(data$steps))
length(is.na(data$steps))
?apply
lapply
?lapply
?sapply
?apply
apply(c(1,2,3),1,function(a) {a + 3});
apply(c(1,2,3),1,FUN=function(a) {a + 3});
apply(c(1,2,3),c(1),FUN=function(a) {a + 3});
apply(data$steps,c(1),FUN=function(a) {a + 3});
apply(data$steps,FUN=function(a) {a + 3});
sapply(data$steps,FUN=function(a) {a + 3});
sapply(data$steps,FUN=function(a) {a + 5});
sapply(data,FUN=function(a) {a + 3});
sapply(data,FUN=function(a) {a});
sapply(data,FUN=function(a) {length(a)});
apply(data,FUN=function(a) {length(a)});
apply(data,MARGIN=1, FUN=function(a) {length(a)});
})
new_data <- apply(data, MARGIN=1, FUN = function(row) {
if (is.na(row$steps)) {
row$steps = 0
}
row
})
new_data <- apply(data, MARGIN=1, FUN = function(row) {
if (is.na(row$steps)) {
row[1] = 0
}
row
})
new_data <- apply(data, MARGIN=1, FUN = function(row) {
if (is.na(row[1])) {
row[1] = 0
}
row
})
head(new_data)
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(new_data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(new_data, MARGIN=1, FUN = 'my_func')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
head(new_data)
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
new_data <- sapply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- sapply(data, MARGIN=1, FUN = 'my_func')
new_data <- sapply(data, MARGIN=1, FUN = 'my_func')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
summary(new_data)
source('~/RepData_PeerAssessment1/helper.R')
summary(new_data)
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
summary(new_data)
mean(data$steps)
summary(data$steps)
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
summary(new_data)
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
interval_data$total_steps[interval_data$interval == row[[3]]]
interval_data$total_steps[interval_data$interval == 835]
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
source('~/RepData_PeerAssessment1/helper.R')
new_data <- apply(data, MARGIN=1, FUN = 'my_func')
summary(new_data)
new_data <- data
new_data$steps <- apply(new_data, MARGIN=1, FUN = function(row) {
if (is.na(row[[1]])) {
row[[1]] = interval_data$total_steps[interval_data$interval == as.numeric(row[[3]])]
}
as.numeric(row[[1]])
})
date_data <- aggregate(list(total_steps=new_data$steps), by=list(date=new_data$date), FUN=sum)
mean(date_data$total_steps)
date_data <- aggregate(list(total_steps=data$steps), by=list(date=data$date), FUN=sum)
mean(date_data$total_steps)
mean(date_data$total_steps, na.rm=TRUE)
head(new_data)
weekdays(new_data[1,2])
weekdays(as.Date(new_data[1,2])
)
?weekdays
weekdays(as.Date(new_data[1,2]), abbreviate = TRUE)
new_data$weekday <- apply(new_data, MARGIN=1, FUN = function(row) {
day = weekdays(as.Date(row[[2]]), abbreviate = TRUE)
if (is-element(day, c('Sun', 'Sat'))) {
factor = 'weekend'
} else {
factor = 'weekday'
}
factor
})
new_data$weekday <- apply(new_data, MARGIN=1, FUN = function(row) {
day = weekdays(as.Date(row[[2]]), abbreviate = TRUE)
if (is.element(day, c('Sun', 'Sat'))) {
factor = 'weekend'
} else {
factor = 'weekday'
}
factor
})
head(new_data)
new_data[2400,]
new_data[12*24,]
new_data[12*24*5,]
new_data[12*24*6,]
?par
?plot
nd_wd <- new_data[new_data$day_of_week == 'weekday', ]
nd_wk <- new_data[new_data$day_of_week == 'weekend', ]
interval_data_wd <- aggregate(list(total_steps=nd_wd$steps), by=list(interval=nd_wd$interval), FUN=function(a) {mean(a, na.rm=TRUE)})
interval_data_wk <- aggregate(list(total_steps=nd_wk$steps), by=list(interval=nd_wk$interval), FUN=function(a) {mean(a, na.rm=TRUE)})
head(nd_wd)
head(new_data)
new_data$day_of_week <- apply(new_data, MARGIN=1, FUN = function(row) {
day = weekdays(as.Date(row[[2]]), abbreviate = TRUE)
if (is.element(day, c('Sun', 'Sat'))) {
factor = 'weekend'
} else {
factor = 'weekday'
}
factor
})
head(new_data)
nd_wk <- new_data[new_data$day_of_week == 'weekend', ]
nd_wd <- new_data[new_data$day_of_week == 'weekday', ]
head(new_data)
head(nd_wd)
head(nd_wk)
interval_data_wd <- aggregate(list(total_steps=nd_wd$steps), by=list(interval=nd_wd$interval), FUN=function(a) {mean(a, na.rm=TRUE)})
interval_data_wk <- aggregate(list(total_steps=nd_wk$steps), by=list(interval=nd_wk$interval), FUN=function(a) {mean(a, na.rm=TRUE)})
par(mfcol=c(2,1))
with()
plot(interval_data_wd$interval_wd, interval_data_wd$total_steps, type='l', xlab="Numbers of steps per interval",)
plot(interval_data_wk$interval_wk, interval_data_wkd$total_steps, type='l', xlab="Numbers of steps per interval",)
par(mfcol=c(2,1))
plot(interval_data_wd$interval_wd, interval_data_wd$total_steps, type='l', xlab="Numbers of steps per interval",)
plot(interval_data_wk$interval_wk, interval_data_wkd$total_steps, type='l', xlab="Numbers of steps per interval",)
par(mfcol=c(2,1))
plot(interval_data_wd$interval_wd, interval_data_wd$total_steps, type='l', xlab="Numbers of steps per interval",)
plot(interval_data_wk$interval_wk, interval_data_wk$total_steps, type='l', xlab="Numbers of steps per interval",)
plot(interval_data_wd$interval_wd, interval_data_wd$total_steps, type='l', xlab="Numbers of steps per interval",)
plot(interval_data_wd$interval, interval_data_wd$total_steps, type='l', xlab="Numbers of steps per interval",)
plot(interval_data_wk$interval, interval_data_wk$total_steps, type='l', xlab="Numbers of steps per interval",)
plot(
interval_data_wd$interval_wd,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab=""
)
plot(
interval_data_wk$interval_wk,
interval_data_wk$total_steps,
type='l',
xlab="Numbers of steps per interval (weekends)",
ylab=""
)
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab=""
)
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Numbers of steps per interval (weekends)",
ylab=""
)
?par
par(mar=c(0,0,0,0))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab=""
)
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Numbers of steps per interval (weekends)",
ylab=""
)
par(mar=c(1,1,1,1))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab=""
)
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Numbers of steps per interval (weekends)",
ylab=""
)
par(mar=c(2,2,2,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab=""
)
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Numbers of steps per interval (weekends)",
ylab=""
)
par(mar=c(4,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab=""
)
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Numbers of steps per interval (weekends)",
ylab=""
)
par(mar=c(3,2,3,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab=""
)
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Numbers of steps per interval (weekends)",
ylab=""
)
par(mar=c(2,2,2,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab="")
par(mar=c(0,2,2,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
xlab="Numbers of steps per interval (weekdays)",
ylab="")
par(mfcol=c(2,1), mar=c(0,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mfcol=c(2,1), mar=c(4,2,4,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(2,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,2,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(3,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,2,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(4,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,2,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(3.5,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,2,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(4,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,0,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(4,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,1,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(1,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,1,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
par(mfcol=c(2,1), mar=c(4,2,4,2))
plot(
interval_data_wd$interval,
interval_data_wd$total_steps,
type='l',
main="Numbers of steps per interval",
xlab="Weekdays",
ylab=""
)
par(mar=c(4,2,1,2))
plot(
interval_data_wk$interval,
interval_data_wk$total_steps,
type='l',
xlab="Weekends",
ylab=""
)
